#!/usr/bin/env python

import socket
import subprocess
import sys
from datetime import datetime

#Clear the screen
subprocess.call('clear',shell=True)

#variables
timeout=10
startPort=22
endPort=startPort+1

#sets the port the scanner ends on
def setEndPort(loc):
	if len(sys.argv[loc]) >= 1:#checks if something is in position loc
	#if something is in position loc
		endPort =int(sys.argv[loc])
		if endPort == startPort:
			endPort =endPort+1	
	else:#if nothing is in position loc
		endPort=startPort+1

#Get input
remoteServer=sys.argv[1]
if 'help' not in sys.argv[1]:
	remoteServerIP=socket.gethostbyname(remoteServer)
	startPort=int(sys.argv[2])
	try:
		if len(sys.argv[3]) >= 1:
		#if something in location 3
			if '-t' not in sys.argv[3]:#checks if -t is in location 3
			#if -t is not in location 3
				endPort =int(sys.argv[3])
				endPort=endPort+1
				try:
					if len(sys.argv[4]) >= 1:
					#if something is in position 4
						if '-t' in sys.argv[4]:#checks if -t is in location 4
						#if -t is in location 4
							try:
								if len(sys.argv[5]) >= 1:#checks if position 5 has somethin in it
								#if something is in position 5
									timeout =int(sys.argv[5])
							except IndexError:#if nothing is in position 5
							#set timeout to 10 seconds(default timeout length)
								timeout=10
								
				except IndexError:#if nothing is in position 4
				#set timeout to 10 seconds(default timeout length)
					timeout =10
			else:
				try:
					if len(sys.argv[4]) >= 1:
						timeout=int(sys.argv[4])
				except IndexError:#if nothing is in position 4
				#set timeout to 10 seconds(default timeout length)
					timeout=10
				endPort=startPort+1	
	except IndexError:#if nothing is present in position 3
	#set the timeout length to 10 seconds and endPort to equal startPort+1
		timeout=10
		endPort=startPort+1
else:
	print "Usage: pscan [Ip address] [start port] [end port] [option]"
	print "-t set timeout length for scanning ports\n(Default: 10)"
	print "EX: pscan 192.168.0.15 22 23 -t 5\n"
	sys.exit()
	
#Print a nice banner with info on host thats being scanned
print "-"*60
print "Please wait, scanning remote host",remoteServerIP
print "-"*60

#Check what timne the scan started
t1 = datetime.now()

#Error handling 
try:
	for port in range(startPort,endPort):
	        sock =socket.socket(socket.AF_INET,socket.SOCK_STREAM)
		sock.settimeout(timeout)
	        result =sock.connect_ex((remoteServerIP,port))
	        if result == 0:
	                print "Port {}:   Open".format(port)
		else:
			sys.exit()
	        sock.close()

except KeyboardInterrupt:
	print "You pressed Ctrl+C"
	sys.exit()

except socket.gaierror:
	print 'Hostname could not be resolved. Exiting'
	sys.exit()

#Checking the time again
t2 =datetime.now()

#Calculates the difference of time, to see how long it took to run the script
total =t2-t1

#Printing the info to screen
print 'Scanning Completed',total
print ''
